{"version":3,"sources":["components/Navbar.jsx","container/Page.jsx","components/LoginForm.jsx","container/Login.jsx","routes.js","views/Home.jsx","views/Auth.jsx","App.js","api/Client.js","serviceWorker.js","index.js"],"names":["withStyles","grow","flexGrow","navbar","height","_ref","classes","expend","handleLogout","title","react_default","a","createElement","AppBar_default","className","position","Toolbar_default","Typography_default","variant","color","Button_default","onClick","Page","children","components_Navbar","localStorage","removeItem","document","location","reload","theme","root","Object","objectSpread","mixins","gutters","paddingTop","spacing","unit","paddingBottom","backgroundColor","indigo","textField","marginLeft","marginRight","username","password","handleChange","handleSubmit","error","Grid_default","container","justify","item","md","xs","sm","Paper_default","elevation","component","Divider_default","TextField_default","id","label","name","value","onChange","e","target","margin","fullWidth","type","button","size","GET_TOKEN","gql","_templateObject","Login","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","email","errors","bind","assertThisInitialized","setState","defineProperty","_this2","_this$state","react_apollo_browser_umd","mutation","tokenAuth","data","setItem","token","login","components_LoginForm","undefined","variables","React","Component","marginTop","routes","path","container_Page","exact","container_Login","App","getItem","pathname","Redirect","to","map","route","Route","assign","key","withRouter","httpLink","HttpLink","uri","authMiddleware","ApolloLink","operation","forward","setContext","headers","authorization","Client","ApolloClient","link","concat","cache","InMemoryCache","clientState","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","client","BrowserRouter","frontend_App","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.21b0e833.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = {\n\tgrow: {\n\t\tflexGrow: 1\n\t},\n\tnavbar: {\n\t\theight: 340\n\t}\n};\n\nconst Navbar = ({ classes, expend, handleLogout, title }) => (\n\t<AppBar className={expend ? classes.navbar : null} position=\"static\">\n\t\t<Toolbar>\n\t\t\t{!expend && (\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"h5\"\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\tclassName={classes.grow}\n\t\t\t\t>\n\t\t\t\t\t{title}\n\t\t\t\t</Typography>\n\t\t\t)}\n\t\t\t{!expend && (\n\t\t\t\t<div>\n\t\t\t\t\t<Button color=\"inherit\" onClick={handleLogout}>\n\t\t\t\t\t\tLogout\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Toolbar>\n\t</AppBar>\n);\n\nNavbar.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n\texpend: PropTypes.bool.isRequired,\n\thandleLogout: PropTypes.func.isRequired,\n\ttitle: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(Navbar);\n","import React from \"react\";\nimport Navbar from \"../components/Navbar\";\n\nconst Page = ({ expend, title, children }) => (\n\t<div>\n\t\t<Navbar\n\t\t\texpend={expend}\n\t\t\thandleLogout={() => {\n\t\t\t\tlocalStorage.removeItem(\"isLogin\");\n\t\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\t\tdocument.location.reload();\n\t\t\t}}\n\t\t\ttitle={title}\n\t\t/>\n\t\t{children}\n\t</div>\n);\nexport default Page;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport indigo from \"@material-ui/core/colors/grey\";\n\nconst styles = theme => ({\n\troot: {\n\t\t...theme.mixins.gutters(),\n\t\tpaddingTop: theme.spacing.unit * 2,\n\t\tpaddingBottom: theme.spacing.unit * 2,\n\t\tbackgroundColor: indigo[\"100\"]\n\t},\n\ttextField: {\n\t\tmarginLeft: theme.spacing.unit,\n\t\tmarginRight: theme.spacing.unit\n\t},\n\ttitle: {\n\t\tflexGrow: 1\n\t}\n});\n\nconst LoginForm = ({\n\tclasses,\n\tusername,\n\tpassword,\n\thandleChange,\n\thandleSubmit,\n\terror\n}) => (\n\t<Grid container justify=\"center\">\n\t\t<Grid item md={5} xs={12} sm={9}>\n\t\t\t<Paper className={classes.root} elevation={1}>\n\t\t\t\t<Grid container justify=\"center\">\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant=\"h2\"\n\t\t\t\t\t\tclassName={classes.grow}\n\t\t\t\t\t\tcomponent=\"h1\"\n\t\t\t\t\t>\n\t\t\t\t\t\tAuthentication\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid container />\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<br />\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<Grid container justify=\"center\">\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\tid=\"outlined-uncontrolled\"\n\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\thandleChange(e.target.name, e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\tid=\"outlined-uncontrolled\"\n\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\thandleChange(e.target.name, e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Paper>\n\t\t</Grid>\n\t</Grid>\n);\n\nLoginForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n\thandleSubmit: PropTypes.func.isRequired,\n\thandleChange: PropTypes.func.isRequired,\n\temail: PropTypes.string.isRequired,\n\tpassword: PropTypes.string.isRequired,\n\terror: PropTypes.bool.isRequired\n};\n\nexport default withStyles(styles)(LoginForm);\n","import React from \"react\";\nimport LoginForm from \"../components/LoginForm\";\nimport { withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst GET_TOKEN = gql`\n\tmutation tokenAuth($email: String!, $password: String!) {\n\t\ttokenAuth(email: $email, password: $password) {\n\t\t\ttoken\n\t\t}\n\t}\n`;\n\nconst styles = {\n\tlogin: {\n\t\tmarginTop: -150\n\t}\n};\n\nclass Login extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\temail: \"\",\n\t\t\tpassword: \"\",\n\t\t\terrors: false\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\thandleChange(name, value) {\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n\t}\n\trender() {\n\t\tconst { classes } = this.props;\n\t\tconst { email, password } = this.state;\n\t\treturn (\n\t\t\t<Mutation mutation={GET_TOKEN}>\n\t\t\t\t{(tokenAuth, { data, error }) => {\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tlocalStorage.setItem(\"token\", data.tokenAuth.token);\n\t\t\t\t\t\tlocalStorage.setItem(\"isLogin\", true);\n\t\t\t\t\t\tdocument.location.reload();\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className={classes.login}>\n\t\t\t\t\t\t\t<LoginForm\n\t\t\t\t\t\t\t\terror={error !== undefined}\n\t\t\t\t\t\t\t\temail={email}\n\t\t\t\t\t\t\t\tpassword={password}\n\t\t\t\t\t\t\t\thandleSubmit={() => {\n\t\t\t\t\t\t\t\t\ttokenAuth({\n\t\t\t\t\t\t\t\t\t\tvariables: {\n\t\t\t\t\t\t\t\t\t\t\temail: email,\n\t\t\t\t\t\t\t\t\t\t\tpassword: password\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</Mutation>\n\t\t);\n\t}\n}\n\nLogin.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Login);\n","import Auth from \"./views/Auth\";\nimport Home from \"./views/Home\";\nimport NotFound from \"./views/NotFound\";\n\nexport default [\n\t{\n\t\tpath: \"/\",\n\t\tcomponent: Home,\n\t\texact: true\n\t},\n\t{\n\t\tpath: \"/login\",\n\t\tcomponent: Auth\n\t}\n];\n","import React from \"react\";\nimport Page from \"../container/Page\";\n\nexport default () => <Page expend={false} />;\n","import React from \"react\";\nimport Page from \"../container/Page\";\nimport Login from \"../container/Login\";\n\nexport default () => (\n\t<Page expend={true}>\n\t\t<Login />\n\t</Page>\n);\n","import React, { Component } from \"react\";\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\nimport routes from \"./routes\";\n\nclass App extends Component {\n\trender() {\n\t\tconst { location } = this.props;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{localStorage.getItem(\"isLogin\") === null &&\n\t\t\t\t\tlocation.pathname !== \"/login\" && <Redirect to=\"/login\" />}\n\t\t\t\t{location.pathname === \"/login\" &&\n\t\t\t\t\tlocalStorage.getItem(\"isLogin\") && <Redirect to=\"/\" />}\n\t\t\t\t{routes.map(route => (\n\t\t\t\t\t<Route key={route.path} {...route} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(App);\n","import { ApolloClient } from \"apollo-client\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloLink, concat } from \"apollo-link\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nconst httpLink = new HttpLink({ uri: \"/graphql\" });\n\nconst authMiddleware = new ApolloLink((operation, forward) => {\n\t// add the authorization to the headers\n\toperation.setContext({\n\t\theaders: {\n\t\t\tauthorization: \"Bearer \" + localStorage.getItem(\"token\") || null\n\t\t}\n\t});\n\n\treturn forward(operation);\n});\n\nexport default new ApolloClient({\n\tlink: concat(authMiddleware, httpLink),\n\tcache: new InMemoryCache(),\n\tclientState: {}\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Client from \"./api/Client\";\nimport { ApolloProvider } from \"react-apollo\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"typeface-roboto\";\n\nconst Root = props => {\n\treturn (\n\t\t<ApolloProvider client={Client}>\n\t\t\t<Router>\n\t\t\t\t<App />\n\t\t\t</Router>\n\t\t</ApolloProvider>\n\t);\n};\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}